Source: ghostwriter
Maintainer: Hiro <hiro@torproject.org>
Section: python
Priority: optional
Build-Depends: dh-python, python3-setuptools, python3-all, debhelper (>= 9), python3, python3-all, python3-pytest, python3-distutils, python3-git, onionshare
Standards-Version: 3.9.6
X-Python3-Version: >= 3.5.3
Homepage: https://github.com/hiromipaw/ghostwriter

Package: ghostwriter
Architecture: all
Depends: ${misc:Depends}, ${python3:Depends}, python3, python3-pyqt5, python3-distutils, python3-git, onionshare
Description: GhostWriter lets you edit a website via lektor, a flexible a
 GhostWriter lets you edit a website via lektor, a flexible and powerful static content management system for building complex and beautiful websites out of flat files â€” for people who do not want to make a compromise between a CMS and a static blog engine.  GhostWriter works by starting a lektor project that you have cloned via git. If the project is a fork, you can keep up with upstream by easily rebasing. The project can be started locally and be edited as a CMS. Finally it also makes your website accessible as a Tor onion service, by using either OnionShare or a nginx webserver on a Docker container. The onion setup is completely transparen for the end user,  that will be able to access it via Tor Browser
 .
 If you want to edit a website with the ease of a CMS and share it as static pages GhostWriter starts a lektor server locally and include some git functionalities to transparently upload your changes or retrieve updates from an upstream repository. GhostWriter also allow you to share your work via .onion, by using OnionShare or a nginx webserver running on a Docker container. Everything is always hosted on your machine, and disappear when you shutdown GhostWriter. The .onion can be accessed via Tor Browser. 

